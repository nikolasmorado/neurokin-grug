// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Navbar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<nav class=\"w-full flex justify-between items-center px-9 py-0 sm:py-0 border-pink-700 border-b-[3px] sm:border-b-[10px] fixed bg-white z-10\"><a href=\"/\"><img src=\"/public/images/text_logo.png\" alt=\"Text logo - Neurokin\" width=\"170\" height=\"70\" class=\"mt-4 sm:mt-0\"></a> <menu id=\"menu\" class=\"text-pink-700 text-lg gap-x-11 sm:flex items-center hidden\"><a href=\"/about\">About</a> <a id=\"login-link\" href=\"/login\">Login</a> <a id=\"auth-link\" href=\"/signup\" class=\"bg-pink-700 text-white px-4 py-2 rounded-lg\">Sign Up</a></menu><div class=\"sm:hidden\"><button><div class=\"flex flex-col items-center\"><div class=\"w-6 h-[2px] bg-black mb-1\"></div><div class=\"w-6 h-[2px] bg-black mb-1\"></div><div class=\"w-6 h-[2px] bg-black mb-1\"></div></div></button></div></nav><script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const loginLink = document.getElementById(\"login-link\");\n    const authLink = document.getElementById(\"auth-link\");\n    const menu = document.getElementById(\"menu\");\n\n    // Check if the Authorization cookie exists and is not expired\n    const isAuthorized = document.cookie.split(\"; \").some((cookie) => cookie.startsWith(\"Authorization=\"));\n\n    if (isAuthorized) {\n      loginLink.textContent = \"Dashboard\"\n      loginLink.href = \"/dashboard\"\n\n      authLink.textContent = \"Logout\";\n      authLink.href = \"/\"; // Redirect to home page after logout\n      authLink.classList.remove(\"bg-pink-700\", \"text-white\", \"px-4\", \"py-2\", \"rounded-lg\");\n      authLink.classList.add(\"text-pink-700\");\n\n      authLink.addEventListener(\"click\", async function (event) {\n        event.preventDefault(); // Prevent default navigation\n\n        try {\n          // Send a request to the /logout endpoint\n          await fetch('/logout', {method: 'POST', credentials: 'same-origin'});\n\n          // Clear the Authorization cookie (if server doesn't do it automatically)\n          document.cookie = \"Authorization=; Max-Age=0; path=/;\";\n\n          // Navigate to the home page after logout\n          window.location.href = \"/\";\n        } catch (error) {\n          console.error(\"Logout failed:\", error);\n        }\n      });\n    } else {\n      loginLink.textContent = \"Login\"\n      loginLink.href = \"/login\"\n    }\n  });\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
